<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.UserMapper">
	
	<resultMap type="com.example.demo.domain.User" id="userMapper">
		<id property="userId" column="user_id"/>
		<result property="userName" column="user_name"/>
		<result property="userEmail" column="user_email"/>
		<result property="userPassword" column="user_password"/>
		<result property="userIcon" column="user_icon"/>
		<result property="deleted" column="deleted"/>
	</resultMap>
	
	<!-- ユーザー情報の全件取得 -->
	<select id="findAll" resultMap="userMapper">
		SELECT
			*
		FROM
			users;
	</select>
	<!-- idが一致するユーザー情報の取得 -->
	<select id="findByOne" resultMap="userMapper">
		SELECT
			u.user_id,
			u.user_name,
			u.user_email,
			u.user_password,
			u.user_icon,
			b.book_id,
			b.book_name,
			b.book_category,
			b.book_price,
			b.book_page,
			b.book_current_page,
			b.book_thoughts,
			b.book_image
		FROM
			users AS u
		LEFT JOIN
			books AS b
		ON
			u.user_id = b.book_id
		WHERE
			u.user_id = #{id}
		AND
			u.deleted = false
		ORDER BY
			b.book_id;
	</select>
	<!-- メールアドレスとパスワードが一致するユーザー情報の取得 -->
	<select id="findByUser" resultMap="userMapper">
		SELECT
			u.user_id,
			u.user_name,
			u.user_email,
			u.user_password,
			u.user_icon,
			b.book_id,
			b.book_name,
			b.book_category,
			b.book_price,
			b.book_page,
			b.book_current_page,
			b.book_thoughts,
			b.book_image
		FROM
			users AS u
		LEFT JOIN
			books AS b
		ON
			u.user_id = b.book_id
		WHERE
			u.user_email = #{email}
		AND
			u.user_password = #{password}
		AND
			u.deleted = false
		ORDER BY
			b.book_id;
	</select>
	<!-- ユーザー登録 -->
	<insert id="insertUser">
		INSERT INTO users(
			user_name,
			user_email,
			user_password,
			user_icon)
		VALUES(
			#{userName},
			#{userEmail},
			#{userPassword},
			#{userIcon});
	</insert>
	<!-- ユーザー情報の修正 -->
	<update id="updateUser">
		UPDATE
			users
		SET
			user_name = #{userName},
			user_email = #{userEmail},
			user_password = #{usePassword},
			user_icon = #{userIcon}
		WHERE
			user_id = #{userId};
	</update>
</mapper>